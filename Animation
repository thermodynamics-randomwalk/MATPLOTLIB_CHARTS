import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import os 
import re
import shutil
import time
from datetime import datetime
from datetime import timedelta
pd.set_option('display.max_columns',None)
class display(object):
    """Display HTML representation of multiple objects"""
    template = """<div style="float: left; padding: 10px;">
    <p style='font-family:"Courier New", Courier, monospace'>{0}</p>{1}
    </div>"""
    def __init__(self, *args):
        self.args = args
        
    def _repr_html_(self):
        return '\n'.join(self.template.format(a, eval(a)._repr_html_())
                         for a in self.args)
    
    def __repr__(self):
        return '\n\n'.join(a + '\n' + repr(eval(a))
                           for a in self.args)
                           '''生成动图'''

%matplotlib inline
import matplotlib.style as style
import matplotlib.animation as ani
plt.style.use('seaborn-whitegrid')
plt.rcParams['font.sans-serif']=['Microsoft YaHei']
plt.rcParams['axes.unicode_minus']=False
fig=plt.figure()
plt.xlim(0.5,30.5)
plt.ylim(-5,10)
# plt.plot(df1.index[:12],normal_value[:12],'o-')
def buildmebarchart(i):
    index_value=df1.index
    normal_value=df1.loc[:,'nornal_rand']
    int_value=df1.loc[:,'int_rand']
    plt.plot(df1.index[:i],normal_value[:i],'.-',color='red')
    plt.plot(df1.index[:i],int_value[:i],'.-',color='green')
    

animator=ani.FuncAnimation(fig,
                           buildmebarchart,
                           frames=30,
                           interval=20)
animator.save('2.gif')
plt.show()

fig, ax = plt.subplots() 
x, y= [], [] 
line, = plt.plot([], [], '.-') 
def init(): 
    ax.set_xlim(-5, 15*np.pi) 
    ax.set_ylim(-3, 3) 
    return line 

def update(step): 
    x.append(step) 
    y.append(np.cos(step/3)+np.sin(step**2)) 
    line.set_data(x, y) 
    return line

ani = FuncAnimation(fig, update, frames=np.linspace(0, 13*np.pi, 128), init_func=init,interval=20) 
ani.save('1.gif',writer='imagemagick')
plt.show()
